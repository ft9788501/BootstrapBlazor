@page "/signaturepads"
@inject IStringLocalizer<SignaturePads> Localizer
@namespace BootstrapBlazor.Shared.Samples

<h3>SignaturePad 签名</h3>

@if (Result != null)
{
<div>
    <p></p>
    <p>您的签名:</p>
    <img src="@Result" style="background-color: beige ; max-width: 80%; " />
    <p></p>
    <p>签名Base64</p>
    <textarea type="text" class="form-control" style="min-width: 100px;max-width: 80%;" rows="6"
              @bind="Result"
              placeholder="Base64" />
</div>
<button class="btn btn-primary"
        type="button"
        @onclick="(() => Result = null)">
    返回前页
</button>

}
else
{
<pre>基础用法:
<code style="color:gray">
&lt;SignaturePad OnResult="((e) =>  Result=e)" BtnCssClass="btn btn-outline-success" /&gt;
</code>
</pre>

<SignaturePad OnResult="OnResult" />

<pre>按钮CSS式样:
<code style="color:gray">
&lt;SignaturePad OnResult="((e) =>  Result=e)" BtnCssClass="btn btn-outline-success" /&gt;
        </code>
    </pre>
<SignaturePad OnResult="OnResult" BtnCssClass="btn btn-outline-success" />

<pre>自定义按钮文本:
    <code style="color:gray">
&lt;SignaturePad OnResult="OnResult"
        SignAboveLabel="Sign above"
        UndoBtnTitle="Undo"
        SaveBase64BtnTitle="OK"
        ChangeColorBtnTitle="Change color"
        ClearBtnTitle="Clear" /&gt;
    </code>
</pre>
<SignaturePad OnResult="OnResult"
              SignAboveLabel="Sign above"
              UndoBtnTitle="Undo"
              SaveBase64BtnTitle="OK"
              ChangeColorBtnTitle="Change color"
              ClearBtnTitle="Clear" />

<a class="btn btn-primary"
   type="button"
   href="signaturepadResponsive">
    响应式签名界面
</a>

<p style="color:red;margin-top:50px">
    Tips: 复杂签名会导致传输数据量大ssr会出现断流显示reload错误,启用以下配置解决这个问题.
</p>

<pre>
<code style="color:gray">
            builder.Services.AddServerSideBlazor(a =>
            {
                //异步调用JavaScript函数的最大等待时间
                a.JSInteropDefaultCallTimeout = TimeSpan.FromMinutes(2);
            }).AddHubOptions(o =>
            {
                //单个传入集线器消息的最大大小。默认 32 KB
                o.MaximumReceiveMessageSize = null;
                //可为客户端上载流缓冲的最大项数。 如果达到此限制，则会阻止处理调用，直到服务器处理流项。
                o.StreamBufferCapacity = 20;
            });
        </code>
    </pre>
}
<AttributeTable Items="@GetAttributes()" />
